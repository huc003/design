package com.example.java.projecteuler;

import java.util.ArrayList;
import java.util.List;

/**
 * @Author: 胡成
 * @Version: 0.0.1V
 * @Date: 2018/6/8
 * @Description: Each new term in the Fibonacci sequence is generated by adding the previous two terms.
 * By starting with 1 and 2, the first 10 terms will be:1, 2, 3, 5, 8, 13, 21, 34, 55, 89,
 * ...By considering the terms in the Fibonacci sequence whose values do not exceed four million,
 * find the sum of the even-valued terms.
 * 翻译：Fibonacci数列的每后一项都是前面两项的和，
 * 若开始的头两项是1和2，那么前10个项就是：1, 2, 3, 5, 8, 13, 21, 34, 55, 89,
 * ...请求出以上Fibonacci数列中不超过400,0000的所有偶数的和。
 * 思路：a+b=c,a = b,b = c
 **/
public class problem000002 {
    public static void main(String[] args) {
        getResult();
    }

    public static void getResult() {
        int a = 1, b = 2, sum = 2;
        List<Integer> list = new ArrayList<>();
        list.add(a);
        list.add(b);
        for (; ; ) {
            int c = a + b;
            if (c > 4000000) {
                break;
            }
            list.add(c);
            a = b;
            b = c;
            if (c % 2 == 0) {
                sum = sum + c;
            }
        }
        System.out.println(sum);
    }
}
